{"ast":null,"code":"import _objectSpread from \"/Users/gracelt/react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport * as ActionTypes from './ActionTypes';\nexport var Leaders = function Leaders() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {\n    isLoading: true,\n    errMess: null,\n    leaders: []\n  };\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case ActionTypes.LEADERS_LOADING:\n      return _objectSpread({}, state, {\n        isLoading: true,\n        errMess: null,\n        leaders: []\n      });\n\n    case ActionTypes.LEADERS_FAILED:\n      return _objectSpread({}, state, {\n        isLoading: false,\n        errMess: action.payload,\n        leaders: []\n      });\n\n    case ActionTypes.ADD_LEADERS:\n      return _objectSpread({}, state, {\n        isLoading: false,\n        errMess: null,\n        leaders: action.payload\n      });\n\n    default:\n      return state;\n  }\n};","map":{"version":3,"sources":["/Users/gracelt/react-app/src/redux/leaders.js"],"names":["ActionTypes","Leaders","state","isLoading","errMess","leaders","action","type","LEADERS_LOADING","LEADERS_FAILED","payload","ADD_LEADERS"],"mappings":";AAAA,OAAO,KAAKA,WAAZ,MAA+B,eAA/B;AAEA,OAAO,IAAMC,OAAO,GAAG,SAAVA,OAAU,GAIZ;AAAA,MAJaC,KAIb,uEAJqB;AAC5BC,IAAAA,SAAS,EAAC,IADkB;AAE5BC,IAAAA,OAAO,EAAC,IAFoB;AAG5BC,IAAAA,OAAO,EAAC;AAHoB,GAIrB;AAAA,MAATC,MAAS;;AACP,UAAOA,MAAM,CAACC,IAAd;AACI,SAAKP,WAAW,CAACQ,eAAjB;AACI,+BAAWN,KAAX;AAAiBC,QAAAA,SAAS,EAAC,IAA3B;AAAgCC,QAAAA,OAAO,EAAC,IAAxC;AAA6CC,QAAAA,OAAO,EAAC;AAArD;;AACJ,SAAKL,WAAW,CAACS,cAAjB;AACI,+BAAWP,KAAX;AAAiBC,QAAAA,SAAS,EAAC,KAA3B;AAAiCC,QAAAA,OAAO,EAACE,MAAM,CAACI,OAAhD;AAAwDL,QAAAA,OAAO,EAAC;AAAhE;;AACJ,SAAKL,WAAW,CAACW,WAAjB;AACI,+BAAWT,KAAX;AAAiBC,QAAAA,SAAS,EAAC,KAA3B;AAAiCC,QAAAA,OAAO,EAAC,IAAzC;AAA8CC,QAAAA,OAAO,EAACC,MAAM,CAACI;AAA7D;;AACJ;AACI,aAAOR,KAAP;AARR;AAUH,CAfM","sourcesContent":["import * as ActionTypes  from  './ActionTypes';\n\nexport const Leaders = (state = {\n    isLoading:true,\n    errMess:null,\n    leaders:[]\n},action)=>{\n    switch(action.type){\n        case ActionTypes.LEADERS_LOADING:\n            return {...state,isLoading:true,errMess:null,leaders:[]}\n        case ActionTypes.LEADERS_FAILED:\n            return {...state,isLoading:false,errMess:action.payload,leaders:[]}\n        case ActionTypes.ADD_LEADERS:\n            return {...state,isLoading:false,errMess:null,leaders:action.payload}\n        default:\n            return state;\n    }\n}"]},"metadata":{},"sourceType":"module"}