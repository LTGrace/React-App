{"ast":null,"code":"import _classCallCheck from \"/Users/gracelt/react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/gracelt/react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/gracelt/react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/gracelt/react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/gracelt/react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/gracelt/react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/gracelt/react-app/src/components/HeaderComponent.js\";\nimport React, { Component } from 'react';\nimport { Navbar, NavbarBrand, Nav, NavbarToggler, Collapse, NavItem, Jumbotron, Button, Modal, ModalHeader, ModalBody, Form, FormGroup, Input, Label } from 'reactstrap';\nimport { NavLink } from 'react-router-dom';\n\nvar Header =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Header, _Component);\n\n  function Header(props) {\n    var _this;\n\n    _classCallCheck(this, Header);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Header).call(this, props));\n    _this.state = {\n      isNavOpen: false,\n      isModalOpen: false\n    };\n    _this.toggleNav = _this.toggleNav.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.toggleModal = _this.toggleModal.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleLogin = _this.handleLogin.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(Header, [{\n    key: \"toggleNav\",\n    value: function toggleNav() {\n      this.setState({\n        isNavOpen: !this.state.isNavOpen\n      });\n    }\n  }, {\n    key: \"toggleModal\",\n    value: function toggleModal() {\n      this.setState({\n        isModalOpen: !this.state.isModalOpen\n      });\n    }\n  }, {\n    key: \"handleLogin\",\n    value: function handleLogin(event) {\n      this.toggleModal();\n      alert(\"Username: \" + this.username.value + \" Password: \" + this.password.value + \" Remember: \" + this.remember.checked);\n      event.preventDefault();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(React.Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }, React.createElement(Navbar, {\n        dark: true,\n        expand: \"md\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }, React.createElement(NavbarToggler, {\n        onClick: this.toggleNav,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }), React.createElement(NavbarBrand, {\n        className: \"mr-auto\",\n        href: \"/\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: \"assets/images/logo.png\",\n        height: \"30\",\n        width: \"41\",\n        alt: \"Ristorance Con Fusion\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      })), React.createElement(Collapse, {\n        isOpen: this.state.isNavOpen,\n        navbar: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }, React.createElement(Nav, {\n        navbar: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }, React.createElement(NavItem, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }, React.createElement(NavLink, {\n        className: \"nav-link\",\n        to: \"/home\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"fa fa-home fa-lg\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }), \"Home\")), React.createElement(NavItem, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }, React.createElement(NavLink, {\n        className: \"nav-link\",\n        to: \"/aboutus\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"fa fa-info fa-lg\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }), \"About Us\")), React.createElement(NavItem, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }, React.createElement(NavLink, {\n        className: \"nav-link\",\n        to: \"/menu\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"fa fa-list fa-lg\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }), \"Menu\")), React.createElement(NavItem, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, React.createElement(NavLink, {\n        className: \"nav-link\",\n        to: \"/contactus\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"fa fa-address-card fa-lg\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }), \"Contact Us\"))), React.createElement(Nav, {\n        className: \"ml-auto\",\n        navbar: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }, React.createElement(NavItem, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }, React.createElement(Button, {\n        outline: true,\n        onClick: this.toggleModal,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"fa fa-sign-in fa-lg\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }), \"Login\")))))), React.createElement(Jumbotron, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"row row-header\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col-12 col-sm-6\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }, \"Ristorante con Fusion\"), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }, \"We take inspiration from the World's best cuisines, and create a unique fusion experience. Our lipsmacking creations will tickle your culinary senses!\"))))), React.createElement(Modal, {\n        isOpen: this.state.isModalOpen,\n        toggle: this.toggleModal,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }, React.createElement(ModalHeader, {\n        toggle: this.toggleModal,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }, \"Login\"), React.createElement(ModalBody, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      }, React.createElement(Form, {\n        onSubmit: this.handleLogin,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }, React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      }, React.createElement(Label, {\n        htmlFor: \"username\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }, \"Username\"), React.createElement(Input, {\n        type: \"text\",\n        id: \"username\",\n        name: \"username\",\n        innerRef: function innerRef(input) {\n          return _this2.username = input;\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      })), React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      }, React.createElement(Label, {\n        htmlFor: \"password\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      }, \"Password\"), React.createElement(Input, {\n        type: \"password\",\n        id: \"password\",\n        name: \"password\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      })), React.createElement(FormGroup, {\n        check: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      }, React.createElement(Label, {\n        check: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      }, React.createElement(Input, {\n        type: \"checkbox\",\n        name: \"rememeber\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      }), \"Remember Me\")), React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      }, React.createElement(Button, {\n        type: \"submit\",\n        value: \"submit\",\n        className: \"bg-primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      }, \"Login\"))))));\n    }\n  }]);\n\n  return Header;\n}(Component);\n\nexport default Header;","map":{"version":3,"sources":["/Users/gracelt/react-app/src/components/HeaderComponent.js"],"names":["React","Component","Navbar","NavbarBrand","Nav","NavbarToggler","Collapse","NavItem","Jumbotron","Button","Modal","ModalHeader","ModalBody","Form","FormGroup","Input","Label","NavLink","Header","props","state","isNavOpen","isModalOpen","toggleNav","bind","toggleModal","handleLogin","setState","event","alert","username","value","password","remember","checked","preventDefault","input"],"mappings":"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","sourcesContent":["import React,{Component} from 'react';\nimport {Navbar,NavbarBrand,Nav,NavbarToggler,Collapse,NavItem,Jumbotron,\n    Button,Modal,ModalHeader,ModalBody,Form,FormGroup,Input,Label} from 'reactstrap';\nimport {NavLink} from 'react-router-dom';\n\nclass Header extends Component{\n    constructor(props){\n        super(props);\n        this.state = {\n            isNavOpen:false,\n            isModalOpen:false\n        }\n        this.toggleNav = this.toggleNav.bind(this);\n        this.toggleModal = this.toggleModal.bind(this);\n        this.handleLogin = this.handleLogin.bind(this);\n    }\n\n    toggleNav(){\n        this.setState({\n            isNavOpen:!this.state.isNavOpen\n        });\n    }\n\n    toggleModal(){\n        this.setState({\n            isModalOpen:!this.state.isModalOpen\n        });\n    }\n    \n    handleLogin(event){\n        this.toggleModal();\n        alert(\"Username: \" + this.username.value + \" Password: \"+ this.password.value + \" Remember: \" + this.remember.checked);\n        event.preventDefault();\n    }\n\n    render(){\n        return(\n            <React.Fragment>\n                <Navbar dark expand=\"md\">\n                    <div className = \"container\">\n                        <NavbarToggler onClick = {this.toggleNav} />\n                        <NavbarBrand className=\"mr-auto\" href=\"/\">\n                            <img src = \"assets/images/logo.png\" height=\"30\" width=\"41\" alt = \"Ristorance Con Fusion\" />\n                        </NavbarBrand>\n                        <Collapse isOpen = {this.state.isNavOpen} navbar>\n                            <Nav navbar>\n                                <NavItem>\n                                    <NavLink className = \"nav-link\" to=\"/home\">\n                                        <span className = \"fa fa-home fa-lg\"></span>Home\n                                    </NavLink>\n                                </NavItem>\n                                <NavItem>\n                                    <NavLink className = \"nav-link\" to=\"/aboutus\">\n                                        <span className = \"fa fa-info fa-lg\"></span>About Us\n                                    </NavLink>\n                                </NavItem>\n                                <NavItem>\n                                    <NavLink className = \"nav-link\" to=\"/menu\">\n                                        <span className = \"fa fa-list fa-lg\"></span>Menu\n                                    </NavLink>\n                                </NavItem>\n                                <NavItem>\n                                    <NavLink className = \"nav-link\" to=\"/contactus\">\n                                        <span className = \"fa fa-address-card fa-lg\"></span>Contact Us\n                                    </NavLink>\n                                </NavItem>\n                            </Nav>\n                            <Nav className =\"ml-auto\" navbar>\n                                <NavItem>\n                                    <Button outline onClick = {this.toggleModal}>\n                                        <span className = \"fa fa-sign-in fa-lg\"></span>Login\n                                    </Button>\n                                </NavItem>\n                            </Nav>\n                        </Collapse>\n                    </div>\n                </Navbar>\n                <Jumbotron>\n                    <div className = \"container\">\n                        <div className = \"row row-header\">\n                            <div className = \"col-12 col-sm-6\">\n                            <h1>Ristorante con Fusion</h1>\n                            <p>We take inspiration from the World's best cuisines, and create a unique fusion experience. Our lipsmacking creations will tickle your culinary senses!</p>\n                            </div>\n                        </div>\n                    </div>\n                </Jumbotron>\n                <Modal isOpen = {this.state.isModalOpen} toggle = {this.toggleModal}>\n                    <ModalHeader toggle = {this.toggleModal}>Login</ModalHeader>\n                    <ModalBody>\n                        <Form onSubmit = {this.handleLogin}>\n                            <FormGroup>\n                                <Label htmlFor = \"username\">Username</Label>\n                                <Input type = \"text\" id = \"username\" name=\"username\" \n                                innerRef = {(input) => this.username = input} />\n                            </FormGroup>\n                            <FormGroup>\n                                <Label htmlFor = \"password\">Password</Label>\n                                <Input type = \"password\" id = \"password\" name=\"password\" />\n                            </FormGroup>\n                            <FormGroup check>\n                                <Label check>\n                                    <Input type = \"checkbox\"  name = \"rememeber\" />\n                                    Remember Me\n                                </Label>\n                            </FormGroup>\n                            <FormGroup>\n                                <Button type = \"submit\" value = \"submit\" className = \"bg-primary\">Login</Button>\n                            </FormGroup>\n                        </Form>\n                    </ModalBody>\n                </Modal>\n            </React.Fragment>\n        );\n    }\n}\n\nexport default Header;"]},"metadata":{},"sourceType":"module"}