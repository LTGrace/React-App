{"ast":null,"code":"import * as ActionTypes from './ActionTypes';\nimport { DISHES } from '../shared/dishes';\nimport { baseUrl } from '../shared/baseUrl';\nexport var addComment = function addComment(dishId, rating, author, comment) {\n  return {\n    type: ActionTypes.ADD_COMMENT,\n    payload: {\n      dishId: dishId,\n      rating: rating,\n      author: author,\n      comment: comment\n    }\n  };\n};\nexport var fetchDishes = function fetchDishes() {\n  return function (dispatch) {\n    dispatch(dishesLoading());\n    return fetch(baseUrl + 'dishes').then(function (response) {\n      return response.json();\n    }).then(function (dishes) {\n      return dispatch(addDishes(dishes));\n    });\n  };\n};\nexport var fetchComments = function fetchComments() {\n  return function (dispatch) {\n    dispatch(dishesLoading());\n    return fetch(baseUrl + 'comments').then(function (response) {\n      return response.json();\n    }).then(function (comments) {\n      return dispatch(addComments(commetns));\n    });\n  };\n};\nexport var dishesLoading = function dishesLoading() {\n  return {\n    type: ActionTypes.DISHES_LOADING\n  };\n};\nexport var dishesFailed = function dishesFailed(errmess) {\n  return {\n    type: ActionTypes.DISHES_FAILED,\n    payload: errmess\n  };\n};\nexport var addDishes = function addDishes(dishes) {\n  return {\n    type: ActionTypes.ADD_DISHES,\n    payload: dishes\n  };\n};","map":{"version":3,"sources":["/Users/gracelt/react-app/src/redux/ActionCreators.js"],"names":["ActionTypes","DISHES","baseUrl","addComment","dishId","rating","author","comment","type","ADD_COMMENT","payload","fetchDishes","dispatch","dishesLoading","fetch","then","response","json","dishes","addDishes","fetchComments","comments","addComments","commetns","DISHES_LOADING","dishesFailed","errmess","DISHES_FAILED","ADD_DISHES"],"mappings":"AAAA,OAAO,KAAKA,WAAZ,MAA6B,eAA7B;AACA,SAAQC,MAAR,QAAqB,kBAArB;AACA,SAAQC,OAAR,QAAsB,mBAAtB;AAEA,OAAO,IAAMC,UAAU,GAAG,SAAbA,UAAa,CAACC,MAAD,EAAQC,MAAR,EAAeC,MAAf,EAAsBC,OAAtB;AAAA,SAAmC;AACzDC,IAAAA,IAAI,EAAER,WAAW,CAACS,WADuC;AAEzDC,IAAAA,OAAO,EAAE;AACLN,MAAAA,MAAM,EAAEA,MADH;AAELC,MAAAA,MAAM,EAAEA,MAFH;AAGLC,MAAAA,MAAM,EAAEA,MAHH;AAILC,MAAAA,OAAO,EAAEA;AAJJ;AAFgD,GAAnC;AAAA,CAAnB;AAUP,OAAO,IAAMI,WAAW,GAAG,SAAdA,WAAc;AAAA,SAAM,UAACC,QAAD,EAAc;AAC3CA,IAAAA,QAAQ,CAACC,aAAa,EAAd,CAAR;AACA,WAAOC,KAAK,CAACZ,OAAO,GAAG,QAAX,CAAL,CACFa,IADE,CACG,UAAAC,QAAQ;AAAA,aAAIA,QAAQ,CAACC,IAAT,EAAJ;AAAA,KADX,EAEFF,IAFE,CAEG,UAAAG,MAAM;AAAA,aAAIN,QAAQ,CAACO,SAAS,CAACD,MAAD,CAAV,CAAZ;AAAA,KAFT,CAAP;AAGH,GAL0B;AAAA,CAApB;AAOP,OAAO,IAAME,aAAa,GAAG,SAAhBA,aAAgB;AAAA,SAAM,UAACR,QAAD,EAAc;AAC7CA,IAAAA,QAAQ,CAACC,aAAa,EAAd,CAAR;AACA,WAAOC,KAAK,CAACZ,OAAO,GAAG,UAAX,CAAL,CACFa,IADE,CACG,UAAAC,QAAQ;AAAA,aAAIA,QAAQ,CAACC,IAAT,EAAJ;AAAA,KADX,EAEFF,IAFE,CAEG,UAAAM,QAAQ;AAAA,aAAIT,QAAQ,CAACU,WAAW,CAACC,QAAD,CAAZ,CAAZ;AAAA,KAFX,CAAP;AAGH,GAL4B;AAAA,CAAtB;AAOP,OAAO,IAAMV,aAAa,GAAG,SAAhBA,aAAgB;AAAA,SAAO;AAChCL,IAAAA,IAAI,EAAER,WAAW,CAACwB;AADc,GAAP;AAAA,CAAtB;AAIP,OAAO,IAAMC,YAAY,GAAG,SAAfA,YAAe,CAACC,OAAD;AAAA,SAAc;AACtClB,IAAAA,IAAI,EAAER,WAAW,CAAC2B,aADoB;AAEtCjB,IAAAA,OAAO,EAAEgB;AAF6B,GAAd;AAAA,CAArB;AAKP,OAAO,IAAMP,SAAS,GAAG,SAAZA,SAAY,CAACD,MAAD;AAAA,SAAa;AAClCV,IAAAA,IAAI,EAAER,WAAW,CAAC4B,UADgB;AAElClB,IAAAA,OAAO,EAACQ;AAF0B,GAAb;AAAA,CAAlB","sourcesContent":["import * as ActionTypes from './ActionTypes';\nimport {DISHES} from '../shared/dishes';\nimport {baseUrl} from '../shared/baseUrl'\n\nexport const addComment = (dishId,rating,author,comment) => ({\n    type: ActionTypes.ADD_COMMENT,\n    payload: {\n        dishId: dishId,\n        rating: rating,\n        author: author,\n        comment: comment\n    }\n});\n\nexport const fetchDishes = () => (dispatch) => {\n    dispatch(dishesLoading());\n    return fetch(baseUrl + 'dishes')\n        .then(response => response.json())\n        .then(dishes => dispatch(addDishes(dishes)));\n}\n\nexport const fetchComments = () => (dispatch) => {\n    dispatch(dishesLoading());\n    return fetch(baseUrl + 'comments')\n        .then(response => response.json())\n        .then(comments => dispatch(addComments(commetns)));\n}\n\nexport const dishesLoading = () => ({\n    type: ActionTypes.DISHES_LOADING\n});\n\nexport const dishesFailed = (errmess) => ({\n    type: ActionTypes.DISHES_FAILED,\n    payload: errmess\n})\n\nexport const addDishes = (dishes) => ({\n    type: ActionTypes.ADD_DISHES,\n    payload:dishes\n})"]},"metadata":{},"sourceType":"module"}