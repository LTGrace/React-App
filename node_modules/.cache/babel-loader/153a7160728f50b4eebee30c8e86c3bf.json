{"ast":null,"code":"import _classCallCheck from \"/Users/gracelt/react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/gracelt/react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/gracelt/react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/gracelt/react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/gracelt/react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/gracelt/react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/gracelt/react-app/src/components/DishDetailComponent.js\";\nimport React, { Component } from 'react';\nimport { Card, CardImg, CardBody, CardTitle, CardText, Breadcrumb, BreadcrumbItem, Button, Modal, ModalBody, ModalHeader, Label, Row, Col } from 'reactstrap';\nimport { Link } from 'react-router-dom';\nimport { Control, LocalForm, Errors } from 'react-redux-form';\nimport { Loading } from './LoadingComponent';\nimport { baseUrl } from '../shared/baseUrl';\nimport { FadeTransform, Fade, Stagger } from 'react-animation-components';\n\nfunction RenderDish(_ref) {\n  var dish = _ref.dish;\n  return React.createElement(\"div\", {\n    className: \"col-12 col-md-5 m-1\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12\n    },\n    __self: this\n  }, React.createElement(FadeTransform, {\n    in: true,\n    transfromProps: {\n      exitTransform: 'scale(0.5) translateY(-50%)'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13\n    },\n    __self: this\n  }, React.createElement(Card, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, React.createElement(CardImg, {\n    width: \"100%\",\n    src: baseUrl + dish.image,\n    alt: dish.name,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }), React.createElement(CardBody, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, React.createElement(CardTitle, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, dish.name), React.createElement(CardText, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, dish.description)))));\n}\n\nfunction RenderComments(_ref2) {\n  var comments = _ref2.comments,\n      postComment = _ref2.postComment,\n      dishId = _ref2.dishId;\n  var commentList = comments.map(function (comment) {\n    return React.createElement(\"li\", {\n      key: comment.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, comment.comment, React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }), \"-- \", comment.author, \"\\xA0\\xA0\", new Intl.DateTimeFormat('en-US', {\n      year: 'numeric',\n      month: 'short',\n      day: '2-digit'\n    }).format(new Date(Date.parse(comment.date))), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }));\n  });\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, React.createElement(\"h4\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, \"Comments\"), React.createElement(\"ul\", {\n    className: \"list-unstyled\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, React.createElement(Stagger, {\n    in: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, commentList)), React.createElement(CommentForm, {\n    dishId: dishId,\n    postComment: postComment,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }));\n}\n\nvar DishDetail = function DishDetail(props) {\n  if (props.isLoading) {\n    return React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, React.createElement(Loading, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    })));\n  } else if (props.errMess) {\n    return React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, React.createElement(\"h4\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, props.errMess)));\n  } else if (props.dish != null) {\n    return React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, React.createElement(Breadcrumb, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, React.createElement(BreadcrumbItem, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, React.createElement(Link, {\n      to: \"/menu\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, \"Menu\")), React.createElement(BreadcrumbItem, {\n      active: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, props.dish.name)), React.createElement(\"div\", {\n      className: \"col-12\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, props.dish.name), React.createElement(\"hr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }))), React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-12 col-md-5 m-1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, React.createElement(RenderDish, {\n      dish: props.dish,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"col-12 col-md-5 m-1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, React.createElement(RenderComments, {\n      comments: props.comments,\n      postComment: props.postComment,\n      dishId: props.dish.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }))));\n  } else {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    });\n  }\n};\n\nexport default DishDetail;\n\nvar required = function required(val) {\n  return val && val.length;\n};\n\nvar maxLength = function maxLength(len) {\n  return function (val) {\n    return !val || val.length <= len;\n  };\n};\n\nvar minLength = function minLength(len) {\n  return function (val) {\n    return val && val.length >= len;\n  };\n};\n\nexport var CommentForm =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(CommentForm, _Component);\n\n  function CommentForm(props) {\n    var _this;\n\n    _classCallCheck(this, CommentForm);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(CommentForm).call(this, props));\n    _this.state = {\n      isModalOpen: false\n    };\n    _this.toggleModal = _this.toggleModal.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleSubmit = _this.handleSubmit.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(CommentForm, [{\n    key: \"toggleModal\",\n    value: function toggleModal() {\n      this.setState({\n        isModalOpen: !this.state.isModalOpen\n      });\n    }\n  }, {\n    key: \"handleSubmit\",\n    value: function handleSubmit(values) {\n      this.toggleModal();\n      this.props.postComment(this.props.dishId, values.rating, values.author, values.comment);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129\n        },\n        __self: this\n      }, React.createElement(Button, {\n        outline: true,\n        onClick: this.toggleModal,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"fa fa-pencil fa-lg\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131\n        },\n        __self: this\n      }), \"Submit Comment\"), React.createElement(\"div\", {\n        className: \"row row-content\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133\n        },\n        __self: this\n      }, React.createElement(Modal, {\n        isOpen: this.state.isModalOpen,\n        toggle: this.state.toggleModal,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134\n        },\n        __self: this\n      }, React.createElement(ModalHeader, {\n        toggle: this.toggleModal,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135\n        },\n        __self: this\n      }, \"Submit Comment\"), React.createElement(ModalBody, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136\n        },\n        __self: this\n      }, React.createElement(LocalForm, {\n        onSubmit: function onSubmit(values) {\n          return _this2.handleSubmit(values);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137\n        },\n        __self: this\n      }, React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138\n        },\n        __self: this\n      }, React.createElement(Label, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139\n        },\n        __self: this\n      }, \"Rating\")), React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141\n        },\n        __self: this\n      }, React.createElement(Control.select, {\n        model: \".rating\",\n        name: \"rating\",\n        className: \"form-control\",\n        defaultValue: \"1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142\n        },\n        __self: this\n      }, React.createElement(\"option\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146\n        },\n        __self: this\n      }, \"1\"), React.createElement(\"option\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147\n        },\n        __self: this\n      }, \"2\"), React.createElement(\"option\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148\n        },\n        __self: this\n      }, \"3\"), React.createElement(\"option\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149\n        },\n        __self: this\n      }, \"4\"), React.createElement(\"option\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150\n        },\n        __self: this\n      }, \"5\"))), React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 153\n        },\n        __self: this\n      }, React.createElement(Label, {\n        htmlFor: \"author\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 154\n        },\n        __self: this\n      }, \"Your Name\")), React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 156\n        },\n        __self: this\n      }, React.createElement(Control.text, {\n        model: \".author\",\n        id: \"author\",\n        name: \"author\",\n        className: \"form-control\",\n        validators: {\n          required: required,\n          maxLength: maxLength(15),\n          minLength: minLength(3)\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 157\n        },\n        __self: this\n      }), React.createElement(Errors, {\n        className: \"text-danger\",\n        show: \"touched\",\n        model: \".author\",\n        messages: {\n          required: 'Required  ',\n          maxLength: 'Must be 15 characters or less  ',\n          minLength: 'Must greater than 2 characters  '\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 163\n        },\n        __self: this\n      })), React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 174\n        },\n        __self: this\n      }, React.createElement(Label, {\n        htmlFor: \"comment\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 175\n        },\n        __self: this\n      }, \"Comment\")), React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 177\n        },\n        __self: this\n      }, React.createElement(Control.textarea, {\n        model: \".comment\",\n        id: \"comment\",\n        name: \"comment\",\n        row: \"20\",\n        className: \"form-control\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 178\n        },\n        __self: this\n      })), React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 183\n        },\n        __self: this\n      }, React.createElement(Button, {\n        type: \"submit\",\n        color: \"primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 184\n        },\n        __self: this\n      }, \"Submit\")))))));\n    }\n  }]);\n\n  return CommentForm;\n}(Component);","map":{"version":3,"sources":["/Users/gracelt/react-app/src/components/DishDetailComponent.js"],"names":["React","Component","Card","CardImg","CardBody","CardTitle","CardText","Breadcrumb","BreadcrumbItem","Button","Modal","ModalBody","ModalHeader","Label","Row","Col","Link","Control","LocalForm","Errors","Loading","baseUrl","FadeTransform","Fade","Stagger","RenderDish","dish","exitTransform","image","name","description","RenderComments","comments","postComment","dishId","commentList","map","comment","id","author","Intl","DateTimeFormat","year","month","day","format","Date","parse","date","DishDetail","props","isLoading","errMess","required","val","length","maxLength","len","minLength","CommentForm","state","isModalOpen","toggleModal","bind","handleSubmit","setState","values","rating"],"mappings":"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","sourcesContent":["import React,{Component} from 'react';\nimport {Card,CardImg,CardBody,CardTitle,CardText,Breadcrumb,BreadcrumbItem,Button,\n        Modal,ModalBody,ModalHeader,Label,Row,Col} from 'reactstrap';\nimport {Link} from 'react-router-dom';\nimport {Control,LocalForm,Errors} from 'react-redux-form';\nimport {Loading} from './LoadingComponent';\nimport {baseUrl} from '../shared/baseUrl';\nimport {FadeTransform,Fade,Stagger} from 'react-animation-components';\n\n    function RenderDish({dish}){\n        return (\n            <div className = \"col-12 col-md-5 m-1\">\n                <FadeTransform in\n                    transfromProps = {{\n                        exitTransform: 'scale(0.5) translateY(-50%)'\n                    }}\n                 >\n                    <Card>\n                        <CardImg width=\"100%\" src = {baseUrl + dish.image} alt = {dish.name} />\n                        <CardBody>\n                            <CardTitle>{dish.name}</CardTitle>\n                            <CardText>{dish.description}</CardText>\n                        </CardBody>\n                    </Card>\n                </FadeTransform>\n            </div>\n        );\n    }\n\n   function RenderComments({comments,postComment,dishId}){\n        var commentList = comments.map(comment =>{\n            return(\n                <li key = {comment.id}>\n                    {comment.comment}\n                    <br /><br />\n                    -- {comment.author}&nbsp;&nbsp;{new Intl.DateTimeFormat('en-US',{year:'numeric',month:'short',day:'2-digit'}).format(new Date(Date.parse(comment.date)))}\n                    <br /><br />\n                </li>\n            )\n        });\n        return(\n            <div>\n                <h4>Comments</h4>\n                    <ul className = \"list-unstyled\">\n                        <Stagger in>\n                            {commentList}\n                        </Stagger>\n                    </ul>\n                <CommentForm dishId = {dishId} postComment = {postComment} />\n            </div>\n        );\n    }\n    \n    const DishDetail = (props) => {\n        if(props.isLoading){\n            return (\n                <div className = \"container\">\n                    <div className = \"row\">\n                        <Loading />\n                    </div>\n                </div>\n            );\n        }else if(props.errMess){\n            return (\n                <div className = \"container\">\n                    <div className = \"row\">\n                        <h4>{props.errMess}</h4>\n                    </div>\n                </div>\n            );\n        }\n        else if(props.dish != null){\n            return(\n                <div className = \"container\">\n                    <div className = \"row\">\n                        <Breadcrumb>\n                            <BreadcrumbItem><Link to = '/menu'>Menu</Link></BreadcrumbItem>\n                            <BreadcrumbItem active>{props.dish.name}</BreadcrumbItem>\n                        </Breadcrumb>\n                        <div className = \"col-12\">\n                            <h3>{props.dish.name}</h3>\n                            <hr />\n                        </div>\n                    </div>\n                    <div className=\"row\">\n                        <div className=\"col-12 col-md-5 m-1\">\n                            <RenderDish dish = {props.dish} />\n                        </div>\n                        <div className=\"col-12 col-md-5 m-1\">\n                            <RenderComments comments = {props.comments}\n                                postComment = {props.postComment}\n                                dishId = {props.dish.id} />\n                        </div>\n                    </div>\n                </div>\n            );\n        }else{\n            return(\n                <div></div>\n            );\n        }\n    }\n\nexport default DishDetail;\n\nconst required = (val) => val && val.length;\nconst maxLength = (len) => (val) => !(val) || (val.length <= len);\nconst minLength = (len) => (val) => val && val.length >= len;\nexport class CommentForm extends Component {\n    constructor(props){\n        super(props);\n        this.state = {\n            isModalOpen:false\n        }\n        this.toggleModal = this.toggleModal.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n    toggleModal(){\n        this.setState({\n            isModalOpen:!this.state.isModalOpen\n        })\n    }\n    handleSubmit(values){\n        this.toggleModal();\n        this.props.postComment(this.props.dishId,values.rating,values.author,values.comment)\n    }\n    render(){\n        return(\n            <div>\n                <Button outline onClick = {this.toggleModal}>\n                <span className = \"fa fa-pencil fa-lg\"></span>Submit Comment   \n                </Button>\n                <div className = \"row row-content\">\n                    <Modal isOpen = {this.state.isModalOpen} toggle = {this.state.toggleModal}>\n                        <ModalHeader toggle = {this.toggleModal}>Submit Comment</ModalHeader>\n                        <ModalBody>\n                            <LocalForm onSubmit = {(values) =>this.handleSubmit(values)}>\n                                <Row>\n                                        <Label>Rating</Label>\n                                </Row>\n                                <Row>\n                                    <Control.select model = \".rating\"  name = \"rating\" \n                                        className = \"form-control\" defaultValue = \"1\"\n                                    >\n                                        \n                                        <option>1</option>\n                                        <option>2</option>\n                                        <option>3</option>\n                                        <option>4</option>\n                                        <option>5</option>\n                                    </Control.select>\n                                </Row>\n                                <Row>\n                                    <Label htmlFor = \"author\" >Your Name</Label>\n                                </Row>\n                                <Row >\n                                    <Control.text model = \".author\" id = \"author\" name = \"author\"\n                                        className = \"form-control\"\n                                        validators = {{\n                                            required,maxLength:maxLength(15),minLength:minLength(3)\n                                        }}\n                                    />\n                                    <Errors \n                                        className = \"text-danger\"\n                                        show = \"touched\"\n                                        model = \".author\"\n                                        messages = {{\n                                            required:'Required  ',\n                                            maxLength: 'Must be 15 characters or less  ',\n                                            minLength: 'Must greater than 2 characters  '\n                                        }}\n                                    />\n                                </Row>\n                                <Row >\n                                    <Label htmlFor = \"comment\">Comment</Label>\n                                </Row>\n                                <Row >\n                                    <Control.textarea model = \".comment\" id = \"comment\" name=\"comment\"\n                                        row = \"20\"\n                                        className = \"form-control\"\n                                    />\n                                </Row>\n                                <Row>\n                                    <Button type = \"submit\" color=\"primary\">\n                                        Submit\n                                    </Button>\n                                </Row>\n                            </LocalForm>\n                        </ModalBody>\n                    </Modal>\n                </div>\n            </div>\n        );\n    }\n}"]},"metadata":{},"sourceType":"module"}