{"ast":null,"code":"import * as ActionTypes from './ActionTypes';\nimport { baseUrl } from '../shared/baseUrl';\nexport var addComment = function addComment(comment) {\n  return {\n    type: ActionTypes.ADD_COMMENT,\n    payload: comment\n  };\n};\nexport var postComment = function postComment(dishId, rating, author, comment) {\n  return function (dispatch) {\n    var newComment = {\n      dishId: dishId,\n      rating: rating,\n      author: author,\n      comment: comment\n    };\n    newComment.date = new Date().toISOString();\n    return fetch(baseUrl + 'comments', {\n      method: 'POST',\n      body: JSON.stringify(newComment),\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      credentials: 'same-origin'\n    }).then(function (response) {\n      if (response.ok) {\n        return response;\n      } else {\n        var error = new Error('Error ' + response.status + ': ' + response.statusText);\n        error.response = response;\n        throw error;\n      }\n    }, function (error) {\n      var errmess = new Error(error.message);\n      throw errmess;\n    }).then(function (response) {\n      return response.json();\n    }).then(function (response) {\n      return dispatch(addComment(response));\n    }).catch(function (error) {\n      console.log('Post comments ', error.message);\n      alert('Your comment could not be posted \\n Error: ' + error.message);\n    });\n  };\n};\nexport var addFeedback = function addFeedback(feedback) {\n  return {\n    type: ActionTypes.ADD_FEEDBACK,\n    payload: feedback\n  };\n}; // export const postFeedback = () => (dispatch) => {\n// }\n\nexport var fetchDishes = function fetchDishes() {\n  return function (dispatch) {\n    dispatch(dishesLoading(true));\n    return fetch(baseUrl + 'dishes').then(function (response) {\n      if (response.ok) {\n        return response;\n      } else {\n        var error = new Error('Error ' + response.status + ': ' + response.statusText);\n        error.response = response;\n        throw error;\n      }\n    }, function (error) {\n      var errmess = new Error(error.message);\n      throw errmess;\n    }).then(function (response) {\n      return response.json();\n    }).then(function (dishes) {\n      return dispatch(addDishes(dishes));\n    }).catch(function (error) {\n      return dispatch(dishesFailed(error.message));\n    });\n  };\n};\nexport var dishesLoading = function dishesLoading() {\n  return {\n    type: ActionTypes.DISHES_LOADING\n  };\n};\nexport var dishesFailed = function dishesFailed(errmess) {\n  return {\n    type: ActionTypes.DISHES_FAILED,\n    payload: errmess\n  };\n};\nexport var addDishes = function addDishes(dishes) {\n  return {\n    type: ActionTypes.ADD_DISHES,\n    payload: dishes\n  };\n};\nexport var fetchComments = function fetchComments() {\n  return function (dispatch) {\n    return fetch(baseUrl + 'comments').then(function (response) {\n      if (response.ok) {\n        return response;\n      } else {\n        var error = new Error('Error ' + response.status + ': ' + response.statusText);\n        error.response = response;\n        throw error;\n      }\n    }, function (error) {\n      var errmess = new Error(error.message);\n      throw errmess;\n    }).then(function (response) {\n      return response.json();\n    }).then(function (comments) {\n      return dispatch(addComments(comments));\n    }).catch(function (error) {\n      return dispatch(commentsFailed(error.message));\n    });\n  };\n};\nexport var commentsFailed = function commentsFailed(errmess) {\n  return {\n    type: ActionTypes.COMMENTS_FAILED,\n    payload: errmess\n  };\n};\nexport var addComments = function addComments(comments) {\n  return {\n    type: ActionTypes.ADD_COMMENTS,\n    payload: comments\n  };\n};\nexport var fetchPromos = function fetchPromos() {\n  return function (dispatch) {\n    dispatch(promosLoading(true));\n    return fetch(baseUrl + 'promotions').then(function (response) {\n      if (response.ok) {\n        return response;\n      } else {\n        var error = new Error('Error ' + response.status + ': ' + response.statusText);\n        error.response = response;\n        throw error;\n      }\n    }, function (error) {\n      var errmess = new Error(error.message);\n      throw errmess;\n    }).then(function (response) {\n      return response.json();\n    }).then(function (promos) {\n      return dispatch(addPromos(promos));\n    }).catch(function (error) {\n      return dispatch(promosFailed(error.message));\n    });\n  };\n};\nexport var promosLoading = function promosLoading() {\n  return {\n    type: ActionTypes.PROMOS_LOADING\n  };\n};\nexport var promosFailed = function promosFailed(errmess) {\n  return {\n    type: ActionTypes.PROMOS_FAILED,\n    payload: errmess\n  };\n};\nexport var addPromos = function addPromos(promos) {\n  return {\n    type: ActionTypes.ADD_PROMOS,\n    payload: promos\n  };\n};\nexport var fetchLeaders = function fetchLeaders() {\n  return function (dispatch) {\n    dispatch(leadersLoading(true));\n    return fetch(baseUrl + 'leaders').then(function (response) {\n      if (response.ok) {\n        return response;\n      } else {\n        var error = new Error('Error ' + response.status + ': ' + response.statusText);\n        error.response = response;\n        throw error;\n      }\n    }, function (error) {\n      var errmess = new Error(error.message);\n      throw errmess;\n    }).then(function (response) {\n      return response.json();\n    }).then(function (leaders) {\n      return dispatch(addLeaders(leaders));\n    }).catch(function (error) {\n      return dispatch(leadersFailed(error.message));\n    });\n  };\n};\nexport var leadersLoading = function leadersLoading() {\n  return {\n    type: ActionTypes.LEADERS_LOADING\n  };\n};\nexport var leadersFailed = function leadersFailed(errmess) {\n  return {\n    type: ActionTypes.LEADERS_FAILED,\n    payload: errmess\n  };\n};\nexport var addLeaders = function addLeaders(leaders) {\n  return {\n    type: ActionTypes.ADD_LEADERS,\n    payload: leaders\n  };\n};","map":{"version":3,"sources":["/Users/gracelt/react-app/src/redux/ActionCreators.js"],"names":["ActionTypes","baseUrl","addComment","comment","type","ADD_COMMENT","payload","postComment","dishId","rating","author","dispatch","newComment","date","Date","toISOString","fetch","method","body","JSON","stringify","headers","credentials","then","response","ok","error","Error","status","statusText","errmess","message","json","catch","console","log","alert","addFeedback","feedback","ADD_FEEDBACK","fetchDishes","dishesLoading","dishes","addDishes","dishesFailed","DISHES_LOADING","DISHES_FAILED","ADD_DISHES","fetchComments","comments","addComments","commentsFailed","COMMENTS_FAILED","ADD_COMMENTS","fetchPromos","promosLoading","promos","addPromos","promosFailed","PROMOS_LOADING","PROMOS_FAILED","ADD_PROMOS","fetchLeaders","leadersLoading","leaders","addLeaders","leadersFailed","LEADERS_LOADING","LEADERS_FAILED","ADD_LEADERS"],"mappings":"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","sourcesContent":["import * as ActionTypes from './ActionTypes';\nimport {baseUrl} from '../shared/baseUrl'\n\nexport const addComment = (comment) => ({\n    type: ActionTypes.ADD_COMMENT,\n    payload: comment\n});\n\nexport const postComment = (dishId,rating,author,comment) => (dispatch) =>{\n    const  newComment = {\n        dishId: dishId,\n        rating: rating,\n        author: author,\n        comment:comment\n    }\n    newComment.date = new Date().toISOString();\n\n    return fetch(baseUrl + 'comments',{\n        method: 'POST',\n        body: JSON.stringify(newComment),\n        headers: {\n            'Content-Type': 'application/json'\n        },\n        credentials: 'same-origin'\n    })\n    .then(response => {\n        if(response.ok){\n            return response;\n        }else{\n            var error = new Error('Error ' + response.status + ': ' + response.statusText);\n            error.response = response;\n            throw error;\n        }\n    },\n    error => {\n        var errmess = new Error(error.message);\n        throw errmess;\n    })\n    .then(response => response.json())\n    .then(response => dispatch(addComment(response)))\n    .catch(error => {console.log('Post comments ',error.message)\n        alert('Your comment could not be posted \\n Error: ' + error.message)\n    });\n}\n\nexport const addFeedback = (feedback) => ({\n    type:ActionTypes.ADD_FEEDBACK,\n    payload:feedback\n})\n\n// export const postFeedback = () => (dispatch) => {\n\n// }\n\nexport const fetchDishes = () => (dispatch) => {\n    dispatch(dishesLoading(true));\n    return fetch(baseUrl + 'dishes')\n        .then(response => {\n            if(response.ok){\n                return response;\n            }else{\n                var error = new Error('Error ' + response.status + ': ' + response.statusText);\n                error.response = response;\n                throw error;\n            }\n        },\n        error => {\n            var errmess = new Error(error.message);\n            throw errmess;\n        })\n        .then(response => response.json())\n        .then(dishes => dispatch(addDishes(dishes)))\n        .catch((error) => dispatch(dishesFailed(error.message)));\n}\n\nexport const dishesLoading = () => ({\n    type: ActionTypes.DISHES_LOADING\n});\n\nexport const dishesFailed = (errmess) => ({\n    type: ActionTypes.DISHES_FAILED,\n    payload: errmess\n})\n\nexport const addDishes = (dishes) => ({\n    type: ActionTypes.ADD_DISHES,\n    payload:dishes\n})\n\nexport const fetchComments = () => (dispatch) => {\n    return fetch(baseUrl + 'comments')\n    .then(response => {\n        if(response.ok){\n            return response;\n        }else{\n            var error = new Error('Error ' + response.status + ': ' + response.statusText);\n            error.response = response;\n            throw error;\n        }\n    },\n    error => {\n        var errmess = new Error(error.message);\n        throw errmess;\n    })\n    .then(response => response.json())\n    .then(comments => dispatch(addComments(comments)))\n    .catch((error) => dispatch(commentsFailed(error.message)));\n        \n}\n\nexport const commentsFailed = (errmess) => ({\n    type: ActionTypes.COMMENTS_FAILED,\n    payload: errmess\n})\n\nexport const addComments = (comments) => ({\n    type: ActionTypes.ADD_COMMENTS,\n    payload:comments\n})\n\n\nexport const fetchPromos = () => (dispatch) => {\n    dispatch(promosLoading(true));\n    return fetch(baseUrl + 'promotions')\n        .then(response => {\n            if(response.ok){\n                return response;\n            }else{\n                var error = new Error('Error ' + response.status + ': ' + response.statusText);\n                error.response = response;\n                throw error;\n            }\n        },\n        error => {\n            var errmess = new Error(error.message);\n            throw errmess;\n        })\n        .then(response => response.json())\n        .then(promos => dispatch(addPromos(promos)))\n        .catch((error) => dispatch(promosFailed(error.message)));\n}\n\nexport const promosLoading = () => ({\n    type: ActionTypes.PROMOS_LOADING\n});\n\nexport const promosFailed = (errmess) => ({\n    type: ActionTypes.PROMOS_FAILED,\n    payload: errmess\n})\n\nexport const addPromos = (promos) => ({\n    type: ActionTypes.ADD_PROMOS,\n    payload:promos\n})\n\nexport const fetchLeaders = () => (dispatch) => {\n    dispatch(leadersLoading(true));\n    return fetch(baseUrl + 'leaders')\n    .then(response => {\n        if(response.ok){\n            return response;\n        }else{\n            var error = new Error('Error ' + response.status + ': ' + response.statusText);\n            error.response = response;\n            throw error;\n        }\n    },\n    error => {\n        var errmess = new Error(error.message);\n        throw errmess;\n    })\n    .then(response => response.json())\n    .then(leaders =>  dispatch(addLeaders(leaders)))\n    .catch((error) => dispatch(leadersFailed(error.message)));\n        \n}\n\nexport const leadersLoading = () => ({\n    type: ActionTypes.LEADERS_LOADING\n});\n\nexport const leadersFailed = (errmess) => ({\n    type: ActionTypes.LEADERS_FAILED,\n    payload: errmess\n})\n\nexport const addLeaders = (leaders) => ({\n    type: ActionTypes.ADD_LEADERS,\n    payload:leaders\n})\n"]},"metadata":{},"sourceType":"module"}