{"ast":null,"code":"import * as ActionTypes from './ActionTypes';\nimport { baseUrl } from '../shared/baseUrl';\nexport var addComment = function addComment(comment) {\n  return {\n    type: ActionTypes.ADD_COMMENT,\n    payload: comment\n  };\n};\nexport var postComment = function postComment(dishId, rating, author, comment) {\n  var newComment = {\n    dishId: dishId,\n    rating: rating,\n    author: author,\n    comment: comment\n  };\n  newComment.date = new Date().toISOString();\n  return fetch(baseUrl + 'comments', {\n    method: 'POST',\n    body: JSON.stringify(newComment),\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    credentials: 'same-origin'\n  });\n};\nexport var fetchDishes = function fetchDishes() {\n  return function (dispatch) {\n    dispatch(dishesLoading(true));\n    return fetch(baseUrl + 'dishes').then(function (response) {\n      if (response.ok) {\n        return response;\n      } else {\n        var error = new Error('Error ' + response.status + ': ' + response.statusText);\n        error.response = response;\n        throw error;\n      }\n    }, function (error) {\n      var errmess = new Error(error.message);\n      throw errmess;\n    }).then(function (response) {\n      return response.json();\n    }).then(function (dishes) {\n      return dispatch(addDishes(dishes));\n    }).catch(function (error) {\n      return dispatch(dishesFailed(error.message));\n    });\n  };\n};\nexport var dishesLoading = function dishesLoading() {\n  return {\n    type: ActionTypes.DISHES_LOADING\n  };\n};\nexport var dishesFailed = function dishesFailed(errmess) {\n  return {\n    type: ActionTypes.DISHES_FAILED,\n    payload: errmess\n  };\n};\nexport var addDishes = function addDishes(dishes) {\n  return {\n    type: ActionTypes.ADD_DISHES,\n    payload: dishes\n  };\n};\nexport var fetchComments = function fetchComments() {\n  return function (dispatch) {\n    return fetch(baseUrl + 'comments').then(function (response) {\n      if (response.ok) {\n        return response;\n      } else {\n        var error = new Error('Error ' + response.status + ': ' + response.statusText);\n        error.response = response;\n        throw error;\n      }\n    }, function (error) {\n      var errmess = new Error(error.message);\n      throw errmess;\n    }).then(function (response) {\n      return response.json();\n    }).then(function (comments) {\n      return dispatch(addComments(comments));\n    }).catch(function (error) {\n      return dispatch(commentsFailed(error.message));\n    });\n  };\n};\nexport var commentsFailed = function commentsFailed(errmess) {\n  return {\n    type: ActionTypes.COMMENTS_FAILED,\n    payload: errmess\n  };\n};\nexport var addComments = function addComments(comments) {\n  return {\n    type: ActionTypes.ADD_COMMENTS,\n    payload: comments\n  };\n};\nexport var fetchPromos = function fetchPromos() {\n  return function (dispatch) {\n    dispatch(promosLoading(true));\n    return fetch(baseUrl + 'promotions').then(function (response) {\n      if (response.ok) {\n        return response;\n      } else {\n        var error = new Error('Error ' + response.status + ': ' + response.statusText);\n        error.response = response;\n        throw error;\n      }\n    }, function (error) {\n      var errmess = new Error(error.message);\n      throw errmess;\n    }).then(function (response) {\n      return response.json();\n    }).then(function (promos) {\n      return dispatch(addPromos(promos));\n    }).catch(function (error) {\n      return dispatch(promosFailed(error.message));\n    });\n  };\n};\nexport var promosLoading = function promosLoading() {\n  return {\n    type: ActionTypes.PROMOS_LOADING\n  };\n};\nexport var promosFailed = function promosFailed(errmess) {\n  return {\n    type: ActionTypes.PROMOS_FAILED,\n    payload: errmess\n  };\n};\nexport var addPromos = function addPromos(promos) {\n  return {\n    type: ActionTypes.ADD_PROMOS,\n    payload: promos\n  };\n};","map":{"version":3,"sources":["/Users/gracelt/react-app/src/redux/ActionCreators.js"],"names":["ActionTypes","baseUrl","addComment","comment","type","ADD_COMMENT","payload","postComment","dishId","rating","author","newComment","date","Date","toISOString","fetch","method","body","JSON","stringify","headers","credentials","fetchDishes","dispatch","dishesLoading","then","response","ok","error","Error","status","statusText","errmess","message","json","dishes","addDishes","catch","dishesFailed","DISHES_LOADING","DISHES_FAILED","ADD_DISHES","fetchComments","comments","addComments","commentsFailed","COMMENTS_FAILED","ADD_COMMENTS","fetchPromos","promosLoading","promos","addPromos","promosFailed","PROMOS_LOADING","PROMOS_FAILED","ADD_PROMOS"],"mappings":"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","sourcesContent":["import * as ActionTypes from './ActionTypes';\nimport {baseUrl} from '../shared/baseUrl'\n\nexport const addComment = (comment) => ({\n    type: ActionTypes.ADD_COMMENT,\n    payload: comment\n});\n\nexport const postComment = (dishId,rating,author,comment) => {\n    const  newComment = {\n        dishId: dishId,\n        rating: rating,\n        author: author,\n        comment:comment\n    }\n    newComment.date = new Date().toISOString();\n\n    return fetch(baseUrl + 'comments',{\n        method: 'POST',\n        body: JSON.stringify(newComment),\n        headers: {\n            'Content-Type': 'application/json'\n        },\n        credentials: 'same-origin'\n    })\n}\n\nexport const fetchDishes = () => (dispatch) => {\n    dispatch(dishesLoading(true));\n    return fetch(baseUrl + 'dishes')\n        .then(response => {\n            if(response.ok){\n                return response;\n            }else{\n                var error = new Error('Error ' + response.status + ': ' + response.statusText);\n                error.response = response;\n                throw error;\n            }\n        },\n        error => {\n            var errmess = new Error(error.message);\n            throw errmess;\n        })\n        .then(response => response.json())\n        .then(dishes => dispatch(addDishes(dishes)))\n        .catch((error) => dispatch(dishesFailed(error.message)));\n}\n\nexport const dishesLoading = () => ({\n    type: ActionTypes.DISHES_LOADING\n});\n\nexport const dishesFailed = (errmess) => ({\n    type: ActionTypes.DISHES_FAILED,\n    payload: errmess\n})\n\nexport const addDishes = (dishes) => ({\n    type: ActionTypes.ADD_DISHES,\n    payload:dishes\n})\n\nexport const fetchComments = () => (dispatch) => {\n    return fetch(baseUrl + 'comments')\n    .then(response => {\n        if(response.ok){\n            return response;\n        }else{\n            var error = new Error('Error ' + response.status + ': ' + response.statusText);\n            error.response = response;\n            throw error;\n        }\n    },\n    error => {\n        var errmess = new Error(error.message);\n        throw errmess;\n    })\n    .then(response => response.json())\n    .then(comments => dispatch(addComments(comments)))\n    .catch((error) => dispatch(commentsFailed(error.message)));\n        \n}\n\nexport const commentsFailed = (errmess) => ({\n    type: ActionTypes.COMMENTS_FAILED,\n    payload: errmess\n})\n\nexport const addComments = (comments) => ({\n    type: ActionTypes.ADD_COMMENTS,\n    payload:comments\n})\n\n\nexport const fetchPromos = () => (dispatch) => {\n    dispatch(promosLoading(true));\n    return fetch(baseUrl + 'promotions')\n        .then(response => {\n            if(response.ok){\n                return response;\n            }else{\n                var error = new Error('Error ' + response.status + ': ' + response.statusText);\n                error.response = response;\n                throw error;\n            }\n        },\n        error => {\n            var errmess = new Error(error.message);\n            throw errmess;\n        })\n        .then(response => response.json())\n        .then(promos => dispatch(addPromos(promos)))\n        .catch((error) => dispatch(promosFailed(error.message)));\n}\n\nexport const promosLoading = () => ({\n    type: ActionTypes.PROMOS_LOADING\n});\n\nexport const promosFailed = (errmess) => ({\n    type: ActionTypes.PROMOS_FAILED,\n    payload: errmess\n})\n\nexport const addPromos = (promos) => ({\n    type: ActionTypes.ADD_PROMOS,\n    payload:promos\n})\n"]},"metadata":{},"sourceType":"module"}